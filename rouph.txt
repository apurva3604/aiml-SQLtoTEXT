from dotenv import load_dotenv
load_dotenv() #loads all environment variables

import streamlit as st
import os
import sqlite3

import google.generativeai as genai
#configure our API key
genai.configure(api_key=os.getenv("GOOGLE_API_KEY"))

#function to load google gemini model and give us sql query as output
def get_gemini_response(question,prompt):
    model=genai.GenerativeModel('gemini-pro')
    response=model.generate_content([prompt[0],question])
    return response.text

#function to generate answer from database using sql query generated above
def read_sql_query(sql,db):
    conn=sqlite3.connect(db)
    cur=conn.cursor()
    cur.execute(sql) 
    rows=cur.fetchall()
    conn.commit()
    conn.close()
    for row in rows:
        print(row)
        return rows

#define your prompt
prompt=[
"""
You are an expert in converting English language to SQL query!The SQL database has the name STUDENT and 
has the following columns-NAME, CLASS ,SECTION and MARKS\n\n For example,\nExample 1-How many 
entries of records are present?,the SQL command will be something like this SELECT* FROM STUDENT;
\nExample 2-Tell me all the students studying in math class?,the SQL command will be something like
this SELECT *FROM STUDENT where CLASS="math";\nExample 3-Give all the names of students in ascending order,
the SQL command will be something like SELECT * FROM STUDENT ORDER BY name ASC;
\nExample 4-Give me name from student whose class is biology and marks have value greater than
55,the SQL command will be something like SELECT * FROM STUDENT WHERE marks > 55 AND class = 'Biology';\nExample
5-Give me average of all the marks ,the SQL command will something be like SELECT AVG(MARKS) AS Average_Marks FROM STUDENT;
\nExample 6-kitne students ke marks 30 se zyada hai, the SQL command will something be like SELECT * FROM STUDENT WHERE MARKS > 30;
also the SQL code should not have ``` in beginning or end and SQL word in the output
"""
]
#streamlit app
st.set_page_config(page_title="I can retrieve any SQL query")
st.header("Application to retrieve SQL data")
question=st.text_input("Input: ",key="input")  #input box
submit=st.button("Ask the question")  #submit button
#if submit is clicked
if submit:
    response=get_gemini_response(question,prompt)
    print(response)
    data=read_sql_query(response,"student.db")
    st.subheader("The response is")
    for row in data:
        print(row)
        st.header(row)